<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Senai.InLock.WebApi</name>
    </assembly>
    <members>
        <member name="T:Senai.InLock.WebApi.Controllers.EstudioController">
            <summary>
            Controller responsável pelos endpoints referentes aos estudios
            </summary>
        </member>
        <member name="P:Senai.InLock.WebApi.Controllers.EstudioController._estudioRepository">
            <summary>
            Cria um objeto _estudioRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.EstudioController.#ctor">
            <summary>
            Instancia este objeto para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.EstudioController.Get">
            <summary>
            Lista todos os estudios
            </summary>
            <returns>Retorna uma lista de estudios</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.EstudioController.GetById(System.Int32)">
            <summary>
            Busca um estudio através do ID
            </summary>
            <param name="id">ID do estudio que será buscado</param>
            <returns>Retorna um estudio buscado</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.EstudioController.Delete(System.Int32)">
            <summary>
            Deleta um estudio existente
            </summary>
            <param name="id">ID do estudio que será deletado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.EstudioController.Post(Senai.InLock.WebApi.Domains.EstudioDomain)">
            <summary>
            Cadastra um novo estudio
            </summary>
            <param name="novoEstudio">Objeto novoEstudio que será cadastrado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.EstudioController.Put(System.Int32,Senai.InLock.WebApi.Domains.EstudioDomain)">
            <summary>
            Atualiza um estudio existente
            </summary>
            <param name="id">ID do estudio que será atualizado</param>
            <param name="estudioAtualizado">Objeto EstudioAtualizado que será alterado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.JogoController.Get">
            <summary>
            Lista todos os jogos
            </summary>
            <returns>Retorna uma lista de jogos</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.JogoController.GetById(System.Int32)">
            <summary>
            Busca um jogo através do ID
            </summary>
            <param name="id">ID do jogo que será buscado</param>
            <returns>Retorna um jogo buscado</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.JogoController.Delete(System.Int32)">
            <summary>
            Deleta um jogo existente
            </summary>
            <param name="id">ID do jogo que será deletado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.JogoController.Put(System.Int32,Senai.InLock.WebApi.Domains.JogoDomain)">
            <summary>
            Atualiza um jogo existente
            </summary>
            <param name="id">ID do jogo que será atualizado</param>
            <param name="jogoAtualizado">Objeto JogoAtualizado que será alterado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.JogoController.Post(Senai.InLock.WebApi.Domains.JogoDomain)">
            <summary>
            Cadastra um novo jogo
            </summary>
            <param name="NovoJogo">Objeto novoJogo que será cadastrado</param>
        </member>
        <member name="T:Senai.InLock.WebApi.Controllers.LoginController">
            <summary>
            Controller responsável pelo Login
            </summary>
        </member>
        <member name="P:Senai.InLock.WebApi.Controllers.LoginController._usuarioRepository">
            <summary>
            Cria um objeto _usuarioRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.LoginController.#ctor">
            <summary>
            Instancia este objeto para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.LoginController.Post(Senai.InLock.WebApi.ViewModels.LoginViewModel)">
            <summary>
            Valida o usuário
            </summary>
            <param name="login">Objeto login que contém o e-mail e a senha do usuário</param>
            <returns>Retorna um token com as informações do usuário</returns>
        </member>
        <member name="T:Senai.InLock.WebApi.Controllers.TipoUsuarioController">
            <summary>
            Controller responsável pelos endpoints referentes aos tipos de usuário
            </summary>
        </member>
        <member name="P:Senai.InLock.WebApi.Controllers.TipoUsuarioController._tipoUsuarioRepository">
            <summary>
            Cria um objeto _tipoUsuarioRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.TipoUsuarioController.#ctor">
            <summary>
            Instancia este objeto para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.TipoUsuarioController.Get">
            <summary>
            Lista todos os tipos de usuário
            </summary>
            <returns>Retorna uma lista de tipos de usuário e um status code 200 - Ok</returns>
            dominio/api/TiposUsuario
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.TipoUsuarioController.Post(Senai.InLock.WebApi.Domains.TipoUsuarioDomain)">
            <summary>
            Cadastra um novo tipo de usuário
            </summary>
            <param name="novoTipoUsuario">Objeto novoTipoUsuario que será cadastrado</param>
            <returns>Retorna os dados que foram enviados para cadastro e um status code 201 - Created</returns>
            dominio/api/TiposUsuario
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.TipoUsuarioController.GetById(System.Int32)">
            <summary>
            Busca um tipo de usuário através do seu ID
            </summary>
            <param name="id">ID do tipo de usuário que será buscado</param>
            <returns>Retorna um tipo de usuário buscado ou NotFound caso nenhum seja encontrado</returns>
            dominio/api/TiposUsuario/1
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.TipoUsuarioController.Put(System.Int32,Senai.InLock.WebApi.Domains.TipoUsuarioDomain)">
            <summary>
            Atualiza um tipo de usuário existente
            </summary>
            <param name="id">ID do tipo de usuário que será atualizado</param>
            <param name="tipoUsuarioAtualizado">Objeto tipoUsuarioAtualizado que será atualizado</param>
            <returns>Retorna um status code</returns>
            dominio/api/TiposUsuario/1
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.TipoUsuarioController.Delete(System.Int32)">
            <summary>
            Deleta um tipo de usuário
            </summary>
            <param name="id">ID do tipo de usuário que será deletado</param>
            <returns>Retorna um status code com uma mensagem de sucesso ou erro</returns>
            dominio/api/TiposUsuario/1
        </member>
        <member name="T:Senai.InLock.WebApi.Controllers.UsuarioController">
            <summary>
            Controller responsável pelos endpoints referentes aos usuários
            </summary>
        </member>
        <member name="P:Senai.InLock.WebApi.Controllers.UsuarioController._usuarioRepository">
            <summary>
            Cria um objeto _usuarioRepository que irá receber todos os métodos definidos na interface
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.UsuarioController.#ctor">
            <summary>
            Instancia este objeto para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.UsuarioController.Get">
            <summary>
            Lista todos os usuários
            </summary>
            <returns>Retorna uma lista de usuários e um status code 200 - Ok</returns>
            dominio/api/Usuarios
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.UsuarioController.Post(Senai.InLock.WebApi.Domains.UsuarioDomain)">
            <summary>
            Cadastra um novo usuário
            </summary>
            <param name="novoUsuario">Objeto novoUsuario que será cadastrado</param>
            <returns>Retorna os dados que foram enviados para cadastro e um status code 201 - Created</returns>
            dominio/api/Usuarios
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.UsuarioController.GetById(System.Int32)">
            <summary>
            Busca um usuário através do seu ID
            </summary>
            <param name="id">ID do usuário que será buscado</param>
            <returns>Retorna um usuário buscado ou NotFound caso nenhum seja encontrado</returns>
            dominio/api/Usuarios/1
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.UsuarioController.Put(System.Int32,Senai.InLock.WebApi.Domains.UsuarioDomain)">
            <summary>
            Atualiza um usuário existente
            </summary>
            <param name="id">ID do usuário que será atualizado</param>
            <param name="usuarioAtualizado">Objeto usuarioAtualizado que será atualizado</param>
            <returns>Retorna um status code</returns>
            dominio/api/Usuarios/1
        </member>
        <member name="M:Senai.InLock.WebApi.Controllers.UsuarioController.Delete(System.Int32)">
            <summary>
            Deleta um usuário
            </summary>
            <param name="id">ID do usuário que será deletado</param>
            <returns>Retorna um status code com uma mensagem de sucesso ou erro</returns>
            dominio/api/Usuarios/1
        </member>
        <member name="T:Senai.InLock.WebApi.Domains.EstudioDomain">
            <summary>
            Classe que representa a entidade Estudio
            </summary>
        </member>
        <member name="T:Senai.InLock.WebApi.Domains.JogoDomain">
            <summary>
            Classe que representa a entidade Jogo
            </summary>
        </member>
        <member name="T:Senai.InLock.WebApi.Domains.TipoUsuarioDomain">
            <summary>
            Classe que representa a entidade Tipo de Usuario
            </summary>
        </member>
        <member name="T:Senai.InLock.WebApi.Domains.UsuarioDomain">
            <summary>
            Classe que representa a entidade Usuario
            </summary>
        </member>
        <member name="T:Senai.InLock.WebApi.Interfaces.IEstudioRepository">
            <summary>
            Interface responsável pelo repositório Estudio
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IEstudioRepository.Listar">
            <summary>
            Lista todos os estudios
            </summary>
            <returns>Retorna uma lista de estudios</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IEstudioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um estudio através do ID
            </summary>
            <param name="id">ID do estudio que será buscado</param>
            <returns>Retorna um estudio buscado</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IEstudioRepository.Cadastrar(Senai.InLock.WebApi.Domains.EstudioDomain)">
            <summary>
            Cadastra um novo estudio
            </summary>
            <param name="novoEstudio">Objeto novoEstudio que será cadastrado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IEstudioRepository.Atualizar(System.Int32,Senai.InLock.WebApi.Domains.EstudioDomain)">
            <summary>
            Atualiza um estudio existente
            </summary>
            <param name="id">ID do estudio que será atualizado</param>
            <param name="estudioAtualizado">Objeto estudioAtualizado que será atualizado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IEstudioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um estudio existente
            </summary>
            <param name="id">ID do estudio que será deletado</param>
        </member>
        <member name="T:Senai.InLock.WebApi.Interfaces.IJogoRepository">
            <summary>
            Interface responsável pelo repositório Jogo
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IJogoRepository.Listar">
            <summary>
            Lista todos os jogos
            </summary>
            <returns>Retorna uma lista de jogos</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IJogoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um jogo através do ID
            </summary>
            <param name="id">ID do jogo que será buscado</param>
            <returns>Retorna um jogo buscado</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IJogoRepository.Cadastrar(Senai.InLock.WebApi.Domains.JogoDomain)">
            <summary>
            Cadastra um novo jogo
            </summary>
            <param name="novoJogo">Objeto novoJogo que será cadastrado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IJogoRepository.Atualizar(System.Int32,Senai.InLock.WebApi.Domains.JogoDomain)">
            <summary>
            Atualiza um jogo existente
            </summary>
            <param name="id">ID do jogo que será atualizado</param>
            <param name="jogoAtualizado">Objeto jogoAtualizado que será atualizado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IJogoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um jogo existente
            </summary>
            <param name="id">ID do jogo que será deletado</param>
        </member>
        <member name="T:Senai.InLock.WebApi.Interfaces.ITipoUsuarioRepository">
            <summary>
            Interface responsável pelo repositório TipoUsuario
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.ITipoUsuarioRepository.Listar">
            <summary>
            Lista todos os tipos de usuário
            </summary>
            <returns>Retorna uma lista de tipos de usuário</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.ITipoUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipo de usuário através do ID
            </summary>
            <param name="id">ID do tipo de usuário que será buscado</param>
            <returns>Retorna um tipo de usuário buscado</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.ITipoUsuarioRepository.Cadastrar(Senai.InLock.WebApi.Domains.TipoUsuarioDomain)">
            <summary>
            Cadastra um novo tipo de usuário
            </summary>
            <param name="novoTipoUsuario">Objeto novoTipoUsuario que será cadastrado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.ITipoUsuarioRepository.Atualizar(System.Int32,Senai.InLock.WebApi.Domains.TipoUsuarioDomain)">
            <summary>
            Atualiza um tipo de usuário existente
            </summary>
            <param name="id">ID do tipo de usuário que será alterado</param>
            <param name="TipoUsuarioAtualizado">Objeto TipoUsuarioAtualizado que será alterado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.ITipoUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo de usuário existente
            </summary>
            <param name="id">ID do tipo de usuário que será deletado</param>
        </member>
        <member name="T:Senai.InLock.WebApi.Interfaces.IUsuarioRepository">
            <summary>
            Interface responsável pelo repositório UsuarioRepository
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IUsuarioRepository.Listar">
            <summary>
            Lista todos os usuários
            </summary>
            <returns>Retorna uma lista de usuários</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um usuário através do ID
            </summary>
            <param name="id">ID do usuário que será buscado</param>
            <returns>Retorna um usuário buscado</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IUsuarioRepository.Cadastrar(Senai.InLock.WebApi.Domains.UsuarioDomain)">
            <summary>
            Cadastra um usuário
            </summary>
            <param name="novoUsuario">Objeto novoUsuario que será cadastrado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IUsuarioRepository.Atualizar(System.Int32,Senai.InLock.WebApi.Domains.UsuarioDomain)">
            <summary>
            Atualiza um usuário existente
            </summary>
            <param name="id">ID do usuário que será alterado</param>
            <param name="UsuarioAtualizado">Objeto UsuarioAtualizado que será alterado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um usuário existente
            </summary>
            <param name="id">ID do usuário que será deletado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Interfaces.IUsuarioRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Busca um usuário através do e-mail e da senha
            </summary>
            <param name="email">E-mail do usuário</param>
            <param name="senha">Senha do usuário</param>
            <returns>Retorna um usuário validado</returns>
        </member>
        <member name="T:Senai.InLock.WebApi.Repositories.EstudioRepository">
            <summary>
            Repositório dos Estudios
            </summary>
        </member>
        <member name="F:Senai.InLock.WebApi.Repositories.EstudioRepository.stringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os parâmetros
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.EstudioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um estudio através do ID
            </summary>
            <param name="id">ID do estudio que será buscado</param>
            <returns>Retorna um estudio buscado</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.EstudioRepository.Cadastrar(Senai.InLock.WebApi.Domains.EstudioDomain)">
            <summary>
            Cadastra um novo estudio
            </summary>
            <param name="novoEstudio">Objeto novoEstudio que será cadastrado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.EstudioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um estudio existente
            </summary>
            <param name="id">ID do estudio que será deletado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.EstudioRepository.Listar">
            <summary>
            Lista todos os estudios
            </summary>
            <returns>Retorna uma lista de estudios</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.EstudioRepository.Atualizar(System.Int32,Senai.InLock.WebApi.Domains.EstudioDomain)">
            <summary>
            Atualiza um estudio existente
            </summary>
            <param name="id">ID do estudio que será atualizado</param>
            <param name="EstudioAtualizado">Objeto EstudioAtualizado que será alterado</param>
        </member>
        <member name="T:Senai.InLock.WebApi.Repositories.JogoRepository">
            <summary>
            Repositório dos Jogos
            </summary>
        </member>
        <member name="F:Senai.InLock.WebApi.Repositories.JogoRepository.stringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os parâmetros
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.JogoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um jogo através do ID
            </summary>
            <param name="id">ID do jogo que será buscado</param>
            <returns>Retorna um jogo buscado</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.JogoRepository.Cadastrar(Senai.InLock.WebApi.Domains.JogoDomain)">
            <summary>
            Cadastra um novo jogo
            </summary>
            <param name="novoJogo">Objeto novoJogo que será cadastrado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.JogoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um jogo existente
            </summary>
            <param name="id">ID do jogo que será deletado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.JogoRepository.Listar">
            <summary>
            Lista todos os jogos
            </summary>
            <returns>Retorna uma lista de jogos</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.JogoRepository.Atualizar(System.Int32,Senai.InLock.WebApi.Domains.JogoDomain)">
            <summary>
            Atualiza um jogo existente
            </summary>
            <param name="id">ID do jogo que será atualizado</param>
            <param name="JogoAtualizado">Objeto JogoAtualizado que será alterado</param>
        </member>
        <member name="T:Senai.InLock.WebApi.Repositories.TipoUsuarioRepository">
            <summary>
            Repositório dos Tipos de Usuários
            </summary>
        </member>
        <member name="F:Senai.InLock.WebApi.Repositories.TipoUsuarioRepository.stringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os parâmetros
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.TipoUsuarioRepository.Atualizar(System.Int32,Senai.InLock.WebApi.Domains.TipoUsuarioDomain)">
            <summary>
            Atualiza um tipo de usuário existente
            </summary>
            <param name="id">ID do tipo de usuário que será atualizado</param>
            <param name="TipoUsuarioAtualizado">Objeto TipoUsuarioAtualizado que será alterado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.TipoUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipo de usuário através do ID
            </summary>
            <param name="id">ID do tipo de usuário que será buscado</param>
            <returns>Retorna um tipo de usuário buscado</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.TipoUsuarioRepository.Cadastrar(Senai.InLock.WebApi.Domains.TipoUsuarioDomain)">
            <summary>
            Cadastra um novo tipo de usuário
            </summary>
            <param name="novoTipoUsuario">Objeto novoTipoUsuario que será cadastrado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.TipoUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo de usuário
            </summary>
            <param name="id">ID do tipo de usuário que será deletado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.TipoUsuarioRepository.Listar">
            <summary>
            Lista todos os tipos de usuário
            </summary>
            <returns>Retorna uma lista de tipos de usuário</returns>
        </member>
        <member name="T:Senai.InLock.WebApi.Repositories.UsuarioRepository">
            <summary>
            Repositório dos Usuários
            </summary>
        </member>
        <member name="F:Senai.InLock.WebApi.Repositories.UsuarioRepository.stringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os parâmetros
            </summary>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.UsuarioRepository.Atualizar(System.Int32,Senai.InLock.WebApi.Domains.UsuarioDomain)">
            <summary>
            Atualiza um usuário existente
            </summary>
            <param name="id">ID do usuário que será atualizado</param>
            <param name="UsuarioAtualizado">Objeto UsuarioAtualizado que será alterado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.UsuarioRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Valida o usuário
            </summary>
            <param name="email">E-mail do usuário</param>
            <param name="senha">Senha do usuário</param>
            <returns>Retorna um usuário validado</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.UsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um usuário através do ID
            </summary>
            <param name="id">ID do usuário que será buscado</param>
            <returns>Retorna um usuário buscado</returns>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.UsuarioRepository.Cadastrar(Senai.InLock.WebApi.Domains.UsuarioDomain)">
            <summary>
            Cadastra um novo usuário
            </summary>
            <param name="novoUsuario">Objeto novoUsuario que será cadastrado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.UsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um usuário existente
            </summary>
            <param name="id">ID do usuário que será deletado</param>
        </member>
        <member name="M:Senai.InLock.WebApi.Repositories.UsuarioRepository.Listar">
            <summary>
            Lista todos os usuários
            </summary>
            <returns>Retorna uma lista de usuários</returns>
        </member>
        <member name="T:Senai.InLock.WebApi.ViewModels.LoginViewModel">
            <summary>
            Classe que representa um modelo para Login
            </summary>
        </member>
    </members>
</doc>
